{"version":3,"sources":["islands.png","info.png","test.png","dev.jpg","datascience.png","demo.png","testing.png","vector.svg","slack.png","breakdown.png","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","slack","Description","info","onClick","document","getElementById","scrollIntoView","behavior","focus","preventScroll","window","open","test","Divider","Profiles","dev","ds","demo","testing","vector","Slack","breakdown","Interested","id","placeholder","type","name","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.54fd1d91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/islands.4c919c47.png\";","export default __webpack_public_path__ + \"static/media/info.eeddbe8f.png\";","export default __webpack_public_path__ + \"static/media/test.169d3c42.png\";","export default __webpack_public_path__ + \"static/media/dev.a10e6bfe.jpg\";","export default __webpack_public_path__ + \"static/media/datascience.14457691.png\";","export default __webpack_public_path__ + \"static/media/demo.2a07ccfd.png\";","export default __webpack_public_path__ + \"static/media/testing.5c1da27d.png\";","export default __webpack_public_path__ + \"static/media/vector.4b5e7133.svg\";","export default __webpack_public_path__ + \"static/media/slack.55ad9eab.png\";","export default __webpack_public_path__ + \"static/media/breakdown.b1149ad7.png\";","import logo from './islands.png';\nimport info from './info.png';\nimport test from './test.png';\nimport dev from './dev.jpg';\nimport ds from './datascience.png';\nimport demo from './demo.png';\nimport testing from './testing.png';\nimport vector from './vector.svg';\nimport slack from './slack.png';\nimport breakdown from './breakdown.png';\nimport { useEffect } from 'react';\nimport './App.css';\n\nconst Header = () => {\n  return(\n    <div className=\"header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div className=\"App-name\">\n        Islands\n      </div>\n      <div className=\"App-quote\">\n        - \n        <img src={slack} className=\"slack-header-icon\" />\n        app\n      </div>\n    </div>\n  )\n}\n\nconst Description = () => {\n  return (\n    <div className=\"description\">\n      <div className=\"info\">\n        <div>\n          <div className=\"quote\">\n            \"self destructive EC2 instaces - for üë®‚Äçüíª/üë©‚Äçüíªs\"\n          </div>\n\n          <div className=\"explanation\">\n            Speed up dev productivity by giving the option to easily spin up machines for your devs that doesn't involve being blocked by devops. Self destructive for security üëÆ‚Äç‚ôÇÔ∏è and money saving üí∞!\n          </div>\n          <div className=\"okay\">\n            <div className=\"info-holder-description\">\n              <img src={info} className=\"App-info\" alt=\"info\" />\n            </div>\n            <div className=\"buttons\">\n              <button className=\"interested\" onClick={() => { \n                document.getElementById('email').scrollIntoView({behavior: 'smooth'});\n                document.getElementById('email').focus({preventScroll:true});\n              }}>I'm interested</button>\n              <button className=\"contact\" onClick={() => { window.open('mailto:islandsslackapp@gmail.com')}}>Contact</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"divider\">\n        </div>\n        <div className=\"info-holder\">\n          <img src={info} className=\"App-info\" alt=\"info\" />\n        </div>\n      </div>\n      <div className=\"bg\">\n        <img src={test} className=\"App-bg\" alt=\"bg\" />\n      </div>\n    </div>\n  )\n}\n\nconst Divider = () => {\n  return (\n    <div className=\"App-divider\"></div>\n  )\n}\n\nconst Profiles = () => {\n  return (\n    <div className=\"profiles\">\n      <div className=\"profiles-description\">\n        Create custom profiles\n      </div>\n      <div className=\"profiles-info\">\n        Easily allow devs to spin up profile defined EC2 instances to test, demo, experiment, etc by setting profiles such as: \n      </div>\n      <div className=\"profile-data\">\n        <div className=\"all-profiles\">\n          <div className=\"profile\">\n            <img src={dev} className=\"dev-icon\" />\n            <div className=\"profile-text\">\n              development\n            </div>\n          </div>\n          <div className=\"profile\">\n            <img src={ds} className=\"dev-icon\" />\n            <div className=\"profile-text\">\n              data science\n            </div>\n          </div>\n          <div className=\"profile\">\n            <img src={demo} className=\"dev-icon\" />\n            <div className=\"profile-text\">\n              demo\n            </div>\n          </div>\n          <div className=\"profile\">\n            <img src={testing} className=\"dev-icon\" />\n            <div className=\"profile-text\">\n              testing\n            </div>\n          </div>\n          <div className=\"profile\">\n            <div className=\"profile-text-last\">\n              and many more!\n            </div>\n          </div>\n        </div>\n        <div className=\"profile-img\">\n          <img src={vector} className=\"profile-icon-img\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Slack = () => {\n  return (\n    <div className=\"slack\">\n      <div className=\"slack-title\">\n        <div className=\"slack-description\">\n          All connected through Slack\n          <img src={slack} className=\"slack-logo\" alt=\"logo\" />\n        </div>\n      </div>\n      <div className=\"profiles-info\">\n        Features include seeing all running instances, daily/weekly/monthly cost analysis, user limits, available instance time windows, and many more!\n      </div>\n      <div className=\"breakdown\">\n        <img src={breakdown} className=\"breakdown-img\" />\n      </div>\n    </div>\n  )\n}\n\nconst Interested = () => {\n  return (\n    <div className=\"interest\">\n      <div className=\"slack-description\">\n        Interested?\n      </div>\n      <div className=\"profiles-info\">\n        Sign up now to get notified when Islands gets released and recieve up to a <b>50% discount</b> when it does üí∞!\n      </div>\n      <div className=\"subscribe\">\n        <form>\n          <input id=\"email\" className=\"email\" placeholder=\"Your Email Address...\" type=\"text\" name=\"name\" />\n          <input className=\"email-submit\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Description />\n      <Divider />\n      <Profiles/>\n      <Divider />\n      <Slack />\n      <Divider />\n      <Interested />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}